plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.22"
    id "org.jetbrains.kotlin.kapt" version "1.8.22"
    id("java-library")
    id("maven-publish")

    id "com.exactpro.th2.gradle.publish" version "0.0.6"
    id "com.exactpro.th2.gradle.component" version "0.0.6"

    id "me.champeau.jmh" version "0.7.2"
}

group = 'com.exactpro.th2'
version = release_version

kotlin {
    jvmToolchain(11)
}

repositories {
    mavenCentral()
    maven {
        name 'Sonatype_snapshots'
        url 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    mavenLocal()

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    implementation "com.exactpro.th2:common:5.10.1-dev"
    implementation "com.exactpro.th2:common-utils:2.2.3-dev"
    implementation "com.exactpro.th2:codec:5.5.0-th2-gradle-plugin-+"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:4.0.2"


    implementation'org.apache.avro:avro:1.11.3'
    implementation('org.apache.commons:commons-compress:1.26.1') {
        because("commons-compress:1.22 transitive dependency of avro:1.11.3 has vulnerabilities")
    }

    implementation 'commons-io:commons-io'

    implementation "io.github.microutils:kotlin-logging:3.0.5"

    compileOnly 'com.google.auto.service:auto-service:1.1.1'
    kapt 'com.google.auto.service:auto-service:1.1.1'

    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.3.1'
    testImplementation 'io.strikt:strikt-core:0.34.1'
}

application {
    applicationName = "service"
    mainClass.set("com.exactpro.th2.codec.MainKt")
}

test {
    useJUnitPlatform()
}

jmh {
    //profilers = ['stack'] // Use profilers to collect additional data. Supported profilers: [cl, comp, gc, stack, perf, perfnorm, perfasm, xperf, xperfasm, hs_cl, hs_comp, hs_gc, hs_rt, hs_thr, async]
}

dependencyCheck {
    suppressionFile='supressions.xml'
}
