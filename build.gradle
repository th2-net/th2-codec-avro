plugins {
    alias(libs.plugins.kotlin.jvm)
    alias(libs.plugins.kotlin.kapt)
    id("java-library")
    id("maven-publish")

    alias(libs.plugins.th2.publish)
    alias(libs.plugins.th2.component)
    alias(libs.plugins.jmh)
}

group = 'com.exactpro.th2'
version = release_version

repositories {
    mavenCentral()
    maven {
        name 'Sonatype_releases'
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }
    mavenLocal()

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    implementation(libs.th2.common)
    implementation(libs.th2.common.utils)
    implementation(libs.th2.codec)
    implementation(libs.jakarta.xml.bind.api)


    implementation(libs.avro)
    implementation('org.apache.commons:commons-compress:1.27.1') {
        because("commons-compress:1.22 transitive dependency of avro:1.11.3 has vulnerabilities")
    }

    implementation 'commons-io:commons-io'

    implementation(libs.kotlin.logging)

    compileOnly(libs.auto.service)
    kapt(libs.auto.service)

    jmh(libs.jmh.core)
    jmh(libs.jmh.generator.annprocess)
    jmhAnnotationProcessor(libs.jmh.generator.annprocess)

    testImplementation(libs.mockito.kotlin)
    testImplementation(libs.strikt.core)
    testImplementation(platform(libs.junit.bom))
    testImplementation("org.junit.jupiter:junit-jupiter")
    testImplementation("org.junit.platform:junit-platform-launcher")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    mainClass.set("com.exactpro.th2.codec.MainKt")
}

test {
    useJUnitPlatform()
}

dependencyCheck {
    suppressionFile='supressions.xml'
}